<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>ThumbnailEditor</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>XWiki.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1313425740000</creationDate>
<date>1314108195000</date>
<contentUpdateDate>1314108195000</contentUpdateDate>
<version>1.1</version>
<title>#if($request.document) $xwiki.getDocument($request.document).displayTitle ($request.document): #end Edit Thumbnail</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>2efd3617-de84-4584-a2ff-6de20f1ca7cc</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>/** 
 * Copyright (c) 2006-2011, David Spurr (http://www.defusion.org.uk/)
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 *     * Neither the name of the David Spurr nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * http://www.opensource.org/licenses/bsd-license.php
 * 
 * See scriptaculous.js for full scriptaculous licence
 */

var CropDraggable=Class.create(Draggable,{initialize:function(a){this.options=Object.extend({drawMethod:function(){}},arguments[1]||{});this.element=$(a);this.handle=this.element;this.delta=this.currentDelta();this.dragging=false;this.eventMouseDown=this.initDrag.bindAsEventListener(this);Event.observe(this.handle,"mousedown",this.eventMouseDown);Draggables.register(this);},draw:function(a){var e=Element.cumulativeOffset(this.element),c=this.currentDelta();e[0]-=c[0];e[1]-=c[1];var b=[0,1].map(function(d){return(a[d]-e[d]-this.offset[d]);}.bind(this));this.options.drawMethod(b);}});var Cropper={};Cropper.Img=Class.create({initialize:function(c,a){this.options=Object.extend({ratioDim:{x:0,y:0},minWidth:0,minHeight:0,displayOnInit:false,onEndCrop:Prototype.emptyFunction,captureKeys:true,onloadCoords:null,maxWidth:0,maxHeight:0,autoIncludeCSS:true},a||{});this.img=$(c);this.clickCoords={x:0,y:0};this.dragging=false;this.resizing=false;this.isWebKit=/Konqueror|Safari|KHTML/.test(navigator.userAgent);this.isIE=/MSIE/.test(navigator.userAgent);this.isOpera8=/Opera\s[1-8]/.test(navigator.userAgent);this.ratioX=0;this.ratioY=0;this.attached=false;this.fixedWidth=(this.options.maxWidth&gt;0&amp;&amp;(this.options.minWidth&gt;=this.options.maxWidth));this.fixedHeight=(this.options.maxHeight&gt;0&amp;&amp;(this.options.minHeight&gt;=this.options.maxHeight));if(typeof this.img=="undefined"){return;}if(this.options.autoIncludeCSS){$$("script").each(function(e){if(e.src.match(/\/cropper([^\/]*)\.js/)){var f=e.src.replace(/\/cropper([^\/]*)\.js.*/,""),d=document.createElement("link");d.rel="stylesheet";d.type="text/css";d.href=f+"/cropper.css";d.media="screen";document.getElementsByTagName("head")[0].appendChild(d);}});}if(this.options.ratioDim.x&gt;0&amp;&amp;this.options.ratioDim.y&gt;0){var b=this.getGCD(this.options.ratioDim.x,this.options.ratioDim.y);this.ratioX=this.options.ratioDim.x/b;this.ratioY=this.options.ratioDim.y/b;}this.subInitialize();if(this.img.complete||this.isWebKit){this.onLoad();}else{Event.observe(this.img,"load",this.onLoad.bindAsEventListener(this));}},getGCD:function(d,c){if(c===0){return d;}return this.getGCD(c,d%c);},onLoad:function(){var c="imgCrop_";var e=this.img.parentNode;var b="";if(this.isOpera8){b=" opera8";}this.imgWrap=new Element("div",{"class":c+"wrap"+b});this.north=new Element("div",{"class":c+"overlay "+c+"north"}).insert(new Element("span"));this.east=new Element("div",{"class":c+"overlay "+c+"east"}).insert(new Element("span"));this.south=new Element("div",{"class":c+"overlay "+c+"south"}).insert(new Element("span"));this.west=new Element("div",{"class":c+"overlay "+c+"west"}).insert(new Element("span"));var d=[this.north,this.east,this.south,this.west];this.dragArea=new Element("div",{"class":c+"dragArea"});d.each(function(f){this.dragArea.insert(f);},this);this.handleN=new Element("div",{"class":c+"handle "+c+"handleN"});this.handleNE=new Element("div",{"class":c+"handle "+c+"handleNE"});this.handleE=new Element("div",{"class":c+"handle "+c+"handleE"});this.handleSE=new Element("div",{"class":c+"handle "+c+"handleSE"});this.handleS=new Element("div",{"class":c+"handle "+c+"handleS"});this.handleSW=new Element("div",{"class":c+"handle "+c+"handleSW"});this.handleW=new Element("div",{"class":c+"handle "+c+"handleW"});this.handleNW=new Element("div",{"class":c+"handle "+c+"handleNW"});this.selArea=new Element("div",{"class":c+"selArea"});[new Element("div",{"class":c+"marqueeHoriz "+c+"marqueeNorth"}).insert(new Element("span")),new Element("div",{"class":c+"marqueeVert "+c+"marqueeEast"}).insert(new Element("span")),new Element("div",{"class":c+"marqueeHoriz "+c+"marqueeSouth"}).insert(new Element("span")),new Element("div",{"class":c+"marqueeVert "+c+"marqueeWest"}).insert(new Element("span")),this.handleN,this.handleNE,this.handleE,this.handleSE,this.handleS,this.handleSW,this.handleW,this.handleNW,new Element("div",{"class":c+"clickArea"})].each(function(f){this.selArea.insert(f);},this);this.imgWrap.appendChild(this.img);this.imgWrap.appendChild(this.dragArea);this.dragArea.appendChild(this.selArea);this.dragArea.appendChild(new Element("div",{"class":c+"clickArea"}));e.appendChild(this.imgWrap);this.startDragBind=this.startDrag.bindAsEventListener(this);Event.observe(this.dragArea,"mousedown",this.startDragBind);this.onDragBind=this.onDrag.bindAsEventListener(this);Event.observe(document,"mousemove",this.onDragBind);this.endCropBind=this.endCrop.bindAsEventListener(this);Event.observe(document,"mouseup",this.endCropBind);this.resizeBind=this.startResize.bindAsEventListener(this);this.handles=[this.handleN,this.handleNE,this.handleE,this.handleSE,this.handleS,this.handleSW,this.handleW,this.handleNW];this.registerHandles(true);if(this.options.captureKeys){this.keysBind=this.handleKeys.bindAsEventListener(this);Event.observe(document,"keypress",this.keysBind);}var a=new CropDraggable(this.selArea,{drawMethod:this.moveArea.bindAsEventListener(this)});this.setParams();},registerHandles:function(b){for(var d=0;d&lt;this.handles.length;d++){var g=$(this.handles[d]);if(b){var a=false;if(this.fixedWidth&amp;&amp;this.fixedHeight){a=true;}else{if(this.fixedWidth||this.fixedHeight){var c=g.className.match(/([S|N][E|W])$/),f=g.className.match(/(E|W)$/),e=g.className.match(/(N|S)$/);if(c||(this.fixedWidth&amp;&amp;f)||(this.fixedHeight&amp;&amp;e)){a=true;}}}if(a){g.hide();}else{Event.observe(g,"mousedown",this.resizeBind);}}else{g.show();Event.stopObserving(g,"mousedown",this.resizeBind);}}},setParams:function(){this.imgW=this.img.width;this.imgH=this.img.height;$(this.north).setStyle({height:0});$(this.east).setStyle({width:0,height:0});$(this.south).setStyle({height:0});$(this.west).setStyle({width:0,height:0});$(this.imgWrap).setStyle({width:this.imgW+"px",height:this.imgH+"px"});$(this.selArea).hide();var b={x1:0,y1:0,x2:0,y2:0},a=false;if(this.options.onloadCoords!==null){b=this.cloneCoords(this.options.onloadCoords);a=true;}else{if(this.options.ratioDim.x&gt;0&amp;&amp;this.options.ratioDim.y&gt;0){b.x1=Math.ceil((this.imgW-this.options.ratioDim.x)/2);b.y1=Math.ceil((this.imgH-this.options.ratioDim.y)/2);b.x2=b.x1+this.options.ratioDim.x;b.y2=b.y1+this.options.ratioDim.y;a=true;}}this.setAreaCoords(b,false,false,1);if(this.options.displayOnInit&amp;&amp;a){this.selArea.show();this.drawArea();this.endCrop();}this.attached=true;},remove:function(){if(this.attached){this.attached=false;this.imgWrap.parentNode.insertBefore(this.img,this.imgWrap);this.imgWrap.parentNode.removeChild(this.imgWrap);Event.stopObserving(this.dragArea,"mousedown",this.startDragBind);Event.stopObserving(document,"mousemove",this.onDragBind);Event.stopObserving(document,"mouseup",this.endCropBind);this.registerHandles(false);if(this.options.captureKeys){Event.stopObserving(document,"keypress",this.keysBind);}}},reset:function(){if(!this.attached){this.onLoad();}else{this.setParams();}this.endCrop();},handleKeys:function(b){var a={x:0,y:0};if(!this.dragging){switch(b.keyCode){case (37):a.x=-1;break;case (38):a.y=-1;break;case (39):a.x=1;break;case (40):a.y=1;break;}if(a.x!==0||a.y!==0){if(b.shiftKey){a.x*=10;a.y*=10;}this.moveArea([this.areaCoords.x1+a.x,this.areaCoords.y1+a.y]);this.endCrop();Event.stop(b);}}},calcW:function(){return(this.areaCoords.x2-this.areaCoords.x1);},calcH:function(){return(this.areaCoords.y2-this.areaCoords.y1);},moveArea:function(a){this.setAreaCoords({x1:a[0],y1:a[1],x2:a[0]+this.calcW(),y2:a[1]+this.calcH()},true,false);this.drawArea();},cloneCoords:function(a){return{x1:a.x1,y1:a.y1,x2:a.x2,y2:a.y2};},setAreaCoords:function(i,a,m,h,k){if(a){var j=i.x2-i.x1,f=i.y2-i.y1;if(i.x1&lt;0){i.x1=0;i.x2=j;}if(i.y1&lt;0){i.y1=0;i.y2=f;}if(i.x2&gt;this.imgW){i.x2=this.imgW;i.x1=this.imgW-j;}if(i.y2&gt;this.imgH){i.y2=this.imgH;i.y1=this.imgH-f;}}else{if(i.x1&lt;0){i.x1=0;}if(i.y1&lt;0){i.y1=0;}if(i.x2&gt;this.imgW){i.x2=this.imgW;}if(i.y2&gt;this.imgH){i.y2=this.imgH;}if(h!==null){if(this.ratioX&gt;0){this.applyRatio(i,{x:this.ratioX,y:this.ratioY},h,k);}else{if(m){this.applyRatio(i,{x:1,y:1},h,k);}}var b=[this.options.minWidth,this.options.minHeight],l=[this.options.maxWidth,this.options.maxHeight];if(b[0]&gt;0||b[1]&gt;0||l[0]&gt;0||l[1]&gt;0){var g={a1:i.x1,a2:i.x2},e={a1:i.y1,a2:i.y2},d={min:0,max:this.imgW},c={min:0,max:this.imgH};if((b[0]!==0||b[1]!==0)&amp;&amp;m){if(b[0]&gt;0){b[1]=b[0];}else{if(b[1]&gt;0){b[0]=b[1];}}}if((l[0]!==0||l[0]!==0)&amp;&amp;m){if(l[0]&gt;0&amp;&amp;l[0]&lt;=l[1]){l[1]=l[0];}else{if(l[1]&gt;0&amp;&amp;l[1]&lt;=l[0]){l[0]=l[1];}}}if(b[0]&gt;0){this.applyDimRestriction(g,b[0],h.x,d,"min");}if(b[1]&gt;1){this.applyDimRestriction(e,b[1],h.y,c,"min");}if(l[0]&gt;0){this.applyDimRestriction(g,l[0],h.x,d,"max");}if(l[1]&gt;1){this.applyDimRestriction(e,l[1],h.y,c,"max");}i={x1:g.a1,y1:e.a1,x2:g.a2,y2:e.a2};}}}this.areaCoords=i;},applyDimRestriction:function(d,f,e,c,b){var a;if(b=="min"){a=((d.a2-d.a1)&lt;f);}else{a=((d.a2-d.a1)&gt;f);}if(a){if(e==1){d.a2=d.a1+f;}else{d.a1=d.a2-f;}if(d.a1&lt;c.min){d.a1=c.min;d.a2=f;}else{if(d.a2&gt;c.max){d.a1=c.max-f;d.a2=c.max;}}}},applyRatio:function(c,a,e,b){var d;if(b=="N"||b=="S"){d=this.applyRatioToAxis({a1:c.y1,b1:c.x1,a2:c.y2,b2:c.x2},{a:a.y,b:a.x},{a:e.y,b:e.x},{min:0,max:this.imgW});c.x1=d.b1;c.y1=d.a1;c.x2=d.b2;c.y2=d.a2;}else{d=this.applyRatioToAxis({a1:c.x1,b1:c.y1,a2:c.x2,b2:c.y2},{a:a.x,b:a.y},{a:e.x,b:e.y},{min:0,max:this.imgH});c.x1=d.a1;c.y1=d.b1;c.x2=d.a2;c.y2=d.b2;}},applyRatioToAxis:function(i,f,h,b){var j=Object.extend(i,{}),e=j.a2-j.a1,a=Math.floor(e*f.b/f.a),g=null,c=null,d=null;if(h.b==1){g=j.b1+a;if(g&gt;b.max){g=b.max;d=g-j.b1;}j.b2=g;}else{g=j.b2-a;if(g&lt;b.min){g=b.min;d=g+j.b2;}j.b1=g;}if(d!==null){c=Math.floor(d*f.a/f.b);if(h.a==1){j.a2=j.a1+c;}else{j.a1=j.a1=j.a2-c;}}return j;},drawArea:function(){var h=this.calcW(),e=this.calcH();var g="px",c=[this.areaCoords.x1+g,this.areaCoords.y1+g,h+g,e+g,this.areaCoords.x2+g,this.areaCoords.y2+g,(this.img.width-this.areaCoords.x2)+g,(this.img.height-this.areaCoords.y2)+g];var f=this.selArea.style;f.left=c[0];f.top=c[1];f.width=c[2];f.height=c[3];var i=Math.ceil((h-6)/2)+g,d=Math.ceil((e-6)/2)+g;this.handleN.style.left=i;this.handleE.style.top=d;this.handleS.style.left=i;this.handleW.style.top=d;this.north.style.height=c[1];var a=this.east.style;a.top=c[1];a.height=c[3];a.left=c[4];a.width=c[6];var j=this.south.style;j.top=c[5];j.height=c[7];var b=this.west.style;b.top=c[1];b.height=c[3];b.width=c[0];this.subDrawArea();this.forceReRender();},forceReRender:function(){if(this.isIE||this.isWebKit){var g=document.createTextNode(" ");var e,b,f,a;if(this.isIE){fixEl=this.selArea;}else{if(this.isWebKit){fixEl=document.getElementsByClassName("imgCrop_marqueeSouth",this.imgWrap)[0];e=new Element("div");e.style.visibility="hidden";var c=["SE","S","SW"];for(a=0;a&lt;c.length;a++){b=document.getElementsByClassName("imgCrop_handle"+c[a],this.selArea)[0];if(b.childNodes.length){b.removeChild(b.childNodes[0]);}b.appendChild(e);}}}fixEl.appendChild(g);fixEl.removeChild(g);}},startResize:function(a){this.startCoords=this.cloneCoords(this.areaCoords);this.resizing=true;this.resizeHandle=Event.element(a).classNames().toString().replace(/([^N|NE|E|SE|S|SW|W|NW])+/,"");Event.stop(a);},startDrag:function(a){this.selArea.show();this.clickCoords=this.getCurPos(a);this.setAreaCoords({x1:this.clickCoords.x,y1:this.clickCoords.y,x2:this.clickCoords.x,y2:this.clickCoords.y},false,false,null);this.dragging=true;this.onDrag(a);Event.stop(a);},getCurPos:function(b){var a=this.imgWrap,c=Element.cumulativeOffset(a);while(a.nodeName!="BODY"){c[1]-=a.scrollTop||0;c[0]-=a.scrollLeft||0;a=a.parentNode;}return{x:Event.pointerX(b)-c[0],y:Event.pointerY(b)-c[1]};},onDrag:function(f){if(this.dragging||this.resizing){var b=null,a=this.getCurPos(f),d=this.cloneCoords(this.areaCoords),c={x:1,y:1};if(this.dragging){if(a.x&lt;this.clickCoords.x){c.x=-1;}if(a.y&lt;this.clickCoords.y){c.y=-1;}this.transformCoords(a.x,this.clickCoords.x,d,"x");this.transformCoords(a.y,this.clickCoords.y,d,"y");}else{if(this.resizing){b=this.resizeHandle;if(b.match(/E/)){this.transformCoords(a.x,this.startCoords.x1,d,"x");if(a.x&lt;this.startCoords.x1){c.x=-1;}}else{if(b.match(/W/)){this.transformCoords(a.x,this.startCoords.x2,d,"x");if(a.x&lt;this.startCoords.x2){c.x=-1;}}}if(b.match(/N/)){this.transformCoords(a.y,this.startCoords.y2,d,"y");if(a.y&lt;this.startCoords.y2){c.y=-1;}}else{if(b.match(/S/)){this.transformCoords(a.y,this.startCoords.y1,d,"y");if(a.y&lt;this.startCoords.y1){c.y=-1;}}}}}this.setAreaCoords(d,false,f.shiftKey,c,b);this.drawArea();Event.stop(f);}},transformCoords:function(b,a,e,d){var c=[b,a];if(b&gt;a){c.reverse();}e[d+"1"]=c[0];e[d+"2"]=c[1];},endCrop:function(){this.dragging=false;this.resizing=false;this.options.onEndCrop(this.areaCoords,{width:this.calcW(),height:this.calcH()});},subInitialize:function(){},subDrawArea:function(){}});Cropper.ImgWithPreview=Class.create(Cropper.Img,{subInitialize:function(){this.hasPreviewImg=false;if(typeof(this.options.previewWrap)!="undefined"&amp;&amp;this.options.minWidth&gt;0&amp;&amp;this.options.minHeight&gt;0){this.previewWrap=$(this.options.previewWrap);this.previewImg=this.img.cloneNode(false);this.previewImg.id="imgCrop_"+this.previewImg.id;this.options.displayOnInit=true;this.hasPreviewImg=true;this.previewWrap.addClassName("imgCrop_previewWrap");this.previewWrap.setStyle({width:this.options.minWidth+"px",height:this.options.minHeight+"px"});this.previewWrap.appendChild(this.previewImg);}},subDrawArea:function(){if(this.hasPreviewImg){var d=this.calcW(),e=this.calcH();var f={x:this.imgW/d,y:this.imgH/e};var c={x:d/this.options.minWidth,y:e/this.options.minHeight};var a={w:Math.ceil(this.options.minWidth*f.x)+"px",h:Math.ceil(this.options.minHeight*f.y)+"px",x:"-"+Math.ceil(this.areaCoords.x1/c.x)+"px",y:"-"+Math.ceil(this.areaCoords.y1/c.y)+"px"};var b=this.previewImg.style;b.width=a.w;b.height=a.h;b.left=a.x;b.top=a.y;}}});</code>
</property>
<property>
<name>JS Cropper</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>1</number>
<className>XWiki.JavaScriptExtension</className>
<guid>dbb775e9-0029-4bfd-851d-d6d284fefe1b</guid>
<property>
<cache>default</cache>
</property>
<property>
<code> var XWiki = (function(XWiki) {

   XWiki.ThumbnailEditor = Class.create({

     /** Some default options */
     options: {

       initialDimensions: {
         x: 150,
         y: 150
       },

       ratio: false,

       centeredInitially: true,

       previewImages : []
     },

     /**
      * Constructor.
      *
      * @param {String|NSDomElement} imageElement the image (or it's id) to edit the thumbnail element on
      * @param {Object} options the options for the editor.
      */
     initialize: function(imageElement, options) {

       // Initialize options.
       this.options = Object.extend(Object.clone(this.options), options || {});
       this.image = $(imageElement);

       this.cropper = new Cropper.Img(this.image, this._getCropperOptions());

       if (this.options.saveButton) {
         $(this.options.saveButton).observe('click', this.onSave.bindAsEventListener(this));
       }
     },

     /**
      * Callback called when the save button has been clicked.
      */
     onSave:function(event) {

       var parameters = {form_token: this.options.token};
       parameters["XWiki.ThumbnailClass_" + this.options.objectNumber + "_x"] = parseInt(this.coordinates.x);
       parameters["XWiki.ThumbnailClass_" + this.options.objectNumber + "_y"] = parseInt(this.coordinates.y);
       parameters["XWiki.ThumbnailClass_" + this.options.objectNumber + "_width"] = parseInt(this.dimensions.x);
       parameters["XWiki.ThumbnailClass_" + this.options.objectNumber + "_height"] = parseInt(this.dimensions.y);
       parameters["XWiki.ThumbnailClass_" + this.options.objectNumber + "_image"] = this.options.image;

      var targetElement = event.element();

       var ajax = new Ajax.Request(new XWiki.Document(this.options.document.page, this.options.document.space).getURL('save','ajax=1'),
       {
         method: 'post',
         parameters: parameters,
         onCreate: function() {
           targetElement._x_notif = new XWiki.widgets.Notification("$msg.get('core.widgets.confirmationBox.notification.inProgress')", 'inprogress');
         },
         onSuccess: function(transport){
           // targetElement._x_notif.hide();
           targetElement._x_notif.replace(new XWiki.widgets.Notification("$msg.get('core.widgets.confirmationBox.notification.done')", "done"));
           (function(){
             document.fire("xwiki:thumbnailEditor:doneEditing");
           }).delay(1);
         },
         onFailure : function(response) {
           var failureReason = response.statusText;
           if (response.statusText == '' /* No response */ || response.status == 12031 /* In IE */) {
             failureReason = 'Server not responding';
           }
           if (targetElement._x_notif) {
             targetElement._x_notif.replace(new XWiki.widgets.Notification("$msg.get('core.widgets.confirmationBox.notification.failed')" + failureReason, "error"));
           } else {
             new XWiki.widgets.Notification("$msg.get('core.widgets.confirmationBox.notification.failed')" + failureReason, "error");
           }
         },
         on1223 : function(response) {
           response.request.options.onSuccess(response);
         },
         on0 : function(response) {
           response.request.options.onFailure(response);
         },
       });
     },

     /**
      * Callback function called whenever some resizing/re-positionning has been performed on the thumbnail editor.
      *
      * @private
      */
     _onFreshMeat: function(coords, dimensions) {
       this.coordinates = this._getRealSize({
         x:coords.x1,
         y:coords.y1
       });
       this.dimensions = this._getRealSize({
         x:dimensions.width,
         y:dimensions.height
       });

       if (this.options.previewImages.length &gt; 0) {
         for (var i=0,len=this.options.previewImages.length;i&lt;len;i++) {
           this._updatePreview(this.options.previewImages[i]);
         }
       }
     },

     /**
      * Updates the preview for the passed image
      *
      * @param {nsIDOMElement} image the image to update the preview for.
      * @private
      */
     _updatePreview: function(image) {
       if (!image.hasClassName("hooked")) {
         image.insert({
           after: new Element('canvas').setStyle({
             width: image.width + 'px',
             height: image.height + 'px'
           })
         });
         image.addClassName("hooked hidden");
       }
       var canvas = image.next(),
           ctx = canvas.getContext('2d');

       if (ctx &amp;&amp; ctx.drawImage) {
         ctx.drawImage(this.image, this.coordinates.x, this.coordinates.y, this.dimensions.x, this.dimensions.y, 0, 0, canvas.width, canvas.height);
       }
     },

     /**
      * Get JS cropper (dependency tool used for the cropping) options based on this object options.
      *
      * @private
      */
     _getCropperOptions: function() {

       var cropperOptions = {
         displayOnInit: true,
         onEndCrop : this._onFreshMeat.bind(this)
       };

       if (this.options.ratio &amp;&amp; this.options.ratio.x &amp;&amp; this.options.ratio.y) {
         cropperOptions.ratioDim = this.options.ratio;
       } else if (this.options.ratio) {
         delete this.options.ratio;
         if (console &amp;&amp; console.warn("Ignoring invalid ratio option"));
       }

       if (this.options.realSize) {
         if (this.options.minimalWidth) {
            this.options.minimalWidth = this._getRelativeSize({x : this.options.minimalWidth}).x
         }
         if (this.options.minimalHeight) {
            this.options.minimalHeight =  this._getRelativeSize({y : this.options.minimalHeight}).y
         }
         this.options.initialDimensions = this._getRelativeSize(this.options.initialDimensions);
       }


       // Set minimal width and/or minimal height
       if (this.options.minimalWidth || this.options.minimalHeight) {
         var optimalDimensions = this._getMinimalDimension({
           x: this.options.minimalWidth,
           y: this.options.minimalHeight
         }, this.options.ratio);

         cropperOptions.minWidth = optimalDimensions.x;
         cropperOptions.minHeight = optimalDimensions.y;
       }

       if (this.options.initialPosition) {
         cropperOptions.onloadCoords = {
           x1: this.options.initialPosition.x,
           y1: this.options.initialPosition.y,
           x2: this.options.initialPosition.x + this.options.initialPosition.width,
           y2: this.options.initialPosition.y + this.options.initialPosition.height
         };
       } else {
         // Fix initial dimensions ratio if not correct relative to option ratio
         this.options.initialDimensions = this._getMinimalDimension(this.options.initialDimensions, this.options.ratio);

         // Compute the initial coordinates
         cropperOptions.onloadCoords = this.options.centeredInitially ? {
           x1: this.image.width  / 2 - this.options.initialDimensions.x / 2,
           y1: this.image.height / 2 - this.options.initialDimensions.y / 2,
           x2: this.image.width  / 2 + this.options.initialDimensions.x / 2,
           y2: this.image.height / 2 + this.options.initialDimensions.y / 2
         } : {
           x1: 0,
           y1: 0,
           x2: this.options.initialDimensions.x,
           y2: this.options.initialDimensions.y
         };
       }

       // Ensure intial coordinates are positive otherwise the cropper won't finish laoding properly.
       var props = ["x1", "y1", "x2", "y2"];
       for (var i=0;i&lt;props.length;i++) {
         if (cropperOptions.onloadCoords[props[i]] &lt; 0) {
           cropperOptions.onloadCoords[props[i]] = 0;
         }
       }

       return cropperOptions;
     },

     /**
      * Gets the size of a dimension relatively to the display size of the image versus. it's real size
      *
      * @private
      */
     _getRelativeSize: function(dimension) {
       if (!this.options.realSize) {
         return dimension;
       }

       return {
         x: dimension.x * this.image.width / this.options.realSize.x || -1,
         y: dimension.y * this.image.height / this.options.realSize.y || -1
       };
     },

     /**
      * Reverse operation of {@link #_getRelativeSize()}
      *
      * @private
      */
     _getRealSize: function(dimension) {
       if (!this.options.realSize) {
         return dimension;
       }

       return {
         x: dimension.x * this.options.realSize.x / this.image.width || -1,
         y: dimension.y * this.options.realSize.y / this.image.height || -1
       };
     },

     /**
      * Get optimal minimal dimension relative to a contraint dimension and a ratio to respect.
      *
      * @param {Object} contraint a contraint dimension, where constraint are expressed as x and/or y minimal size
      * @param {Object} ratio the x vs. y ratio the minimal dimension must respect
      * @private
      */
     _getMinimalDimension: function(constraint, ratio) {

       if (typeof constraint === 'undefined'
         || (typeof constraint.x === 'undefined' &amp;&amp; typeof constraint.y === 'undefined')) {
           return {
             // If there is no contraint, there is no minimal dimension either
             x: undefined,
             y: undefined
           };
       }

       if (typeof ratio === 'undefined') {
         // If no ratio is passed, the constraint is the right one already
         return constraint;
       }

       return {
         // When minimal height and width are not proportional to the passed ratio, honor both relatively to the ratio
         y: Math.max(constraint.x * ratio.y / ratio.x || -1, constraint.y || -1),
         x: Math.max(constraint.y * ratio.x / ratio.y || -1, constraint.x || -1)
       };
     }

   });

   return XWiki;

})(XWiki || {});


document.observe("xwiki:dom:loaded", function() {
  var loading = new Element('div', {'class' : 'imgcenter'}).update("&lt;img src=\"$xwiki.getSkinFile('icons/xwiki/ajax-loader-large.gif')\"/&gt;");
  $$('a.edit-thumbnail-link').each(function(link) {
    if (link.getAttribute("rel") === 'lightbox') {
      link.observe("click", function(event){
        event.stop();
        var targetElement = event.element();
        var url = targetElement.href;
        if (url.indexOf('?') &lt; 0) {
          url += '?';
        }
        url += "&amp;xpage=plain";
        var dialog = new XWiki.widgets.ModalPopup(
          loading, {}, {
          'verticalPosition' : 'top',
          'removeOnClose' : true,
          'title' : "$msg.get('xe.thumbnailEditor.title')",
          'onClose' : function() { delete XWiki.thumbnailEditor; }
          }
        );
        document.observe("xwiki:thumbnailEditor:doneEditing", function(){
          if (dialog) {
            dialog.closeDialog();
          }
        });
        dialog.showDialog();
        if (window.browser.isIE6x) {
          dialog.dialog.down().setStyle({position: "absolute"});
        } else {
          dialog.dialog.down().setStyle({position: "fixed"});
        }
        dialog.dialogBox.setStyle({overflow: "hidden", width: "auto", margin: "0 10%"});
        new Ajax.Updater(loading.up(), url, {
          evalScripts: true,
          onComplete : function() {
            (function(){
              document.fire("xwiki:thumbnailEditor:popupReady");
              // Deferring this event to ensure the scripts in AJAX response have been evaluated.
            }).defer();
          }
        });
      });
    }
  });
});
</code></property><property><name>Thumbnail Editor</name>
</property>
<property>
<parse>1</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>d89845f0-e18a-49a0-bc0c-1ab9ee93d061</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>div#thumbnailPreviews {
  float:left;
}

div#thumbnailPreviews div.previewTitle {
  font-weight:bold;
  font-size: 80%;
  margin-bottom:10px;
}

div#thumbnailPreviews div.previewHolder {
  display:inline-block;
}

div#thumbnailPreviews div.previewHolder img,
div#thumbnailPreviews div.previewHolder canvas {
  vertical-align:top;
}

#existingThumbnail {
  margin-bottom:20px;
}

#thumbnailEditor {
  float: left;
  margin-right: 50px;
}

</code></property><property><name>Thumbnail Editor Style</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>1</number>
<className>XWiki.StyleSheetExtension</className>
<guid>0aad7a4d-7243-47b6-98fc-a5778da2958a</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>.imgCrop_wrap {
	/* width: 500px;   @done_in_js */
	/* height: 375px;  @done_in_js */
	position: relative;
	cursor: crosshair;
}

/* an extra classname is applied for Opera &lt; 9.0 to fix it's lack of opacity support */
.imgCrop_wrap.opera8 .imgCrop_overlay,
.imgCrop_wrap.opera8 .imgCrop_clickArea { 
	background-color: transparent;
}

/* fix for IE displaying all boxes at line-height by default, although they are still 1 pixel high until we combine them with the pointless span */
.imgCrop_wrap,
.imgCrop_wrap * {
	font-size: 0;
	line-height: 0;
	opacity: 1;
	filter:alpha(opacity=100);
}

.imgCrop_overlay {
	background-color: #000;
	opacity: 0.5;
	filter:alpha(opacity=50);
	position: absolute;
	width: 100%;
	height: 100%;
}

.imgCrop_selArea {
	position: absolute;
	/* @done_in_js 
	top: 20px;
	left: 20px;
	width: 200px;
	height: 200px;
	background: transparent url(castle.jpg) no-repeat  -210px -110px;
	*/
	cursor: move;
	z-index: 2;
}

/* clickArea is all a fix for IE 5.5 &amp; 6 to allow the user to click on the given area */
.imgCrop_clickArea {
	width: 100%;
	height: 100%;
	background-color: #FFF;
	opacity: 0.01;
	filter:alpha(opacity=01);
}

.imgCrop_marqueeHoriz {
	position: absolute;
	width: 100%;
	height: 1px;
	background: transparent url(marqueeHoriz.gif) repeat-x 0 0;
	z-index: 3;
}

.imgCrop_marqueeVert {
	position: absolute;
	height: 100%;
	width: 1px;
	background: transparent url(marqueeVert.gif) repeat-y 0 0;
	z-index: 3;
}

/* 
 *  FIX MARCHING ANTS IN IE
 *	As IE &lt;6 tries to load background images we can uncomment the follwoing hack 
 *  to remove that issue, not as pretty - but is anything in IE?
 *  And yes I do know that 'filter' is evil, but it will make it look semi decent in IE
 *
* html .imgCrop_marqueeHoriz,
* html .imgCrop_marqueeVert {
	background: transparent;
	filter: Invert; 
}
* html .imgCrop_marqueeNorth { border-top: 1px dashed #000; }
* html .imgCrop_marqueeEast  { border-right: 1px dashed #000; }
* html .imgCrop_marqueeSouth { border-bottom: 1px dashed #000; }
* html .imgCrop_marqueeWest  { border-left: 1px dashed #000; }
*/

.imgCrop_marqueeNorth { top: 0; left: 0; }
.imgCrop_marqueeEast  { top: 0; right: 0; }
.imgCrop_marqueeSouth { bottom: 0px; left: 0; }
.imgCrop_marqueeWest  { top: 0; left: 0; }


.imgCrop_handle {
	position: absolute;
	border: 1px solid #333;
	width: 6px;
	height: 6px;
	background: #FFF;
	opacity: 0.5;
	filter:alpha(opacity=50);
	z-index: 4;
}

/* fix IE 5 box model */
* html .imgCrop_handle {
	width: 8px;
	height: 8px;
	wid\th: 6px;
	hei\ght: 6px;
}

.imgCrop_handleN {
	top: -3px;
	left: 0;
	/* margin-left: 49%;    @done_in_js */
	cursor: n-resize;
}

.imgCrop_handleNE { 
	top: -3px;
	right: -3px;
	cursor: ne-resize;
}

.imgCrop_handleE {
	top: 0;
	right: -3px;
	/* margin-top: 49%;    @done_in_js */
	cursor: e-resize;
}

.imgCrop_handleSE {
	right: -3px;
	bottom: -3px;
	cursor: se-resize;
}

.imgCrop_handleS {
	right: 0;
	bottom: -3px;
	/* margin-right: 49%; @done_in_js */
	cursor: s-resize;
}

.imgCrop_handleSW {
	left: -3px;
	bottom: -3px;
	cursor: sw-resize;
}

.imgCrop_handleW {
	top: 0;
	left: -3px;
	/* margin-top: 49%;  @done_in_js */
	cursor: w-resize;
}

.imgCrop_handleNW {
	top: -3px;
	left: -3px;
	cursor: nw-resize;
}

/**
 * Create an area to click &amp; drag around on as the default browser behaviour is to let you drag the image 
 */
.imgCrop_dragArea {
	width: 100%;
	height: 100%;
	z-index: 200;
	position: absolute;
	top: 0;
	left: 0;
}

.imgCrop_previewWrap {
	/* width: 200px;  @done_in_js */
	/* height: 200px; @done_in_js */
	overflow: hidden;
	position: relative;
}

.imgCrop_previewWrap img {
	position: absolute;
}</code>
</property>
<property>
<name>JS Cropper Styles</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<code>
<disabled>0</disabled>
<name>code</name>
<number>9</number>
<prettyName>Macro code</prettyName>
<rows>20</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<contentDescription>
<disabled>0</disabled>
<name>contentDescription</name>
<number>8</number>
<prettyName>Content description (Not applicable for "No content" type)</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</contentDescription>
<contentType>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>contentType</name>
<number>7</number>
<prettyName>Macro content type</prettyName>
<relationalStorage>0</relationalStorage>
<separator>|</separator>
<separators>|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>Optional|Mandatory|No content</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</contentType>
<defaultCategory>
<disabled>0</disabled>
<name>defaultCategory</name>
<number>4</number>
<prettyName>Default category</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultCategory>
<description>
<disabled>0</disabled>
<name>description</name>
<number>3</number>
<prettyName>Macro description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<id>
<disabled>0</disabled>
<name>id</name>
<number>1</number>
<prettyName>Macro id</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</id>
<name>
<disabled>0</disabled>
<name>name</name>
<number>2</number>
<prettyName>Macro name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<supportsInlineMode>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>supportsInlineMode</name>
<number>5</number>
<prettyName>Supports inline mode</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</supportsInlineMode>
<visibility>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>visibility</name>
<number>6</number>
<prettyName>Macro visibility</prettyName>
<relationalStorage>0</relationalStorage>
<separator>|</separator>
<separators>|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>Current User|Current Wiki|Global</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</visibility>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>0</number>
<className>XWiki.WikiMacroClass</className>
<guid>fc84b664-d3fe-4a2d-9c5d-e4ab56056973</guid>
<property>
<code>{{velocity output=false}}

Resolve image to edit thumbnail for

#if("$!{xcontext.macro.params.property}" != '')
  #set($propertyReference = $services.model.resolveObjectProperty($xcontext.macro.params.property))
  #set($document = $xwiki.getDocument($propertyReference.parent.parent))
  #set($object = $document.getObject($propertyReference.parent.name)) ## FIXME: there should be a public getXObject(ObjectReference) API
  #set($property = $object.get($propertyReference.name))
  #if("$!property" != '')
    #set($imageReference = $services.model.resolveAttachment($property, "currentmixed", $propertyReference.parent))
  #end
#elseif("$!{xcontext.macro.params.image}" != '')
  #set($imageReference = $services.model.resolveAttachment($xcontext.macro.params.image))
#else

#end

#if("$!{xcontext.macro.params.editInPopup}" != 'false')

When the thumbnail should be edited in a popup, we need to include thumbnail editor SX dependencies in the current page.
If not, (when editing in XWiki.ThumbnailEditor), no extra SX is needed.

$xwiki.jsfx.use('js/scriptaculous/dragdrop.js')
$xwiki.jsx.use('XWiki.ThumbnailEditor')
$xwiki.ssx.use('XWiki.ThumbnailEditor')

#end

Now construct the URL pointing to the Thumbnail Editor for the proper image

#set($editThumbnailURL = '')

#if($imageReference)
#set($serializedImageReference = $services.model.serialize($imageReference, "default"))
#set($editThumbnailURL = $xwiki.getURL('XWiki.ThumbnailEditor', 'view', "image=${serializedImageReference}"))

Check for a ratio parameter
#if("$!{xcontext.macro.params.ratio}" != '')
  #set($editThumbnailURL = "${editThumbnailURL}&amp;ratio=${xcontext.macro.params.ratio}")
#end

Check for minimum(Widht|Height) parameter
#if("$!{xcontext.macro.params.minimumWidth}" != '')
  #set($editThumbnailURL = "${editThumbnailURL}&amp;minimumWidth=${xcontext.macro.params.minimumWidth}")
#end
#if("$!{xcontext.macro.params.minimumHeight}" != '')
  #set($editThumbnailURL = "${editThumbnailURL}&amp;minimumHeight=${xcontext.macro.params.minimumHeight}")
#end

Check for previewSizes parameter
#if("$!{xcontext.macro.params.previewSizes}" != '')
  #set($editThumbnailURL = "${editThumbnailURL}&amp;previewSizes=${xcontext.macro.params.previewSizes}")
#end
#end
{{/velocity}}

{{velocity}}
#if("$!editThumbnailURL" != '')
{{html}}
&lt;div class="thumbnail-edit"&gt;
  &lt;span class="buttonwrapper"&gt;
    &lt;a href="$editThumbnailURL" class="edit-thumbnail-link button" #if("$!{xcontext.macro.params.editInPopup}" != 'false')rel="lightbox"#end/&gt;Edit Thumbnail&lt;/a&gt;
  &lt;/span&gt;
&lt;/div&gt;
{{/html}}
#end
{{/velocity}}</code>
</property>
<property>
<contentDescription></contentDescription>
</property>
<property>
<contentType>No content</contentType>
</property>
<property>
<defaultCategory></defaultCategory>
</property>
<property>
<description>Provides a link to edit the thumbnail of an image attached to a wiki page</description>
</property>
<property>
<id>thumbnailEditor</id>
</property>
<property>
<name>Thumbnail Editor</name>
</property>
<property>
<supportsInlineMode>1</supportsInlineMode>
</property>
<property>
<visibility>Current Wiki</visibility>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroParameterClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<defaultValue>
<disabled>0</disabled>
<name>defaultValue</name>
<number>4</number>
<prettyName>Parameter default value</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultValue>
<description>
<disabled>0</disabled>
<name>description</name>
<number>2</number>
<prettyName>Parameter description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<mandatory>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>mandatory</name>
<number>3</number>
<prettyName>Parameter mandatory</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</mandatory>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Parameter name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>0</number>
<className>XWiki.WikiMacroParameterClass</className>
<guid>b1fc457f-6abe-4bfb-a979-80bfbf012f4f</guid>
<property>
<defaultValue></defaultValue>
</property>
<property>
<description>The reference to a property of an XObject that holds the reference to the image to edit thumbnail for.</description>
</property>
<property>
<mandatory>0</mandatory>
</property>
<property>
<name>property</name>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroParameterClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<defaultValue>
<disabled>0</disabled>
<name>defaultValue</name>
<number>4</number>
<prettyName>Parameter default value</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultValue>
<description>
<disabled>0</disabled>
<name>description</name>
<number>2</number>
<prettyName>Parameter description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<mandatory>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>mandatory</name>
<number>3</number>
<prettyName>Parameter mandatory</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</mandatory>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Parameter name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>1</number>
<className>XWiki.WikiMacroParameterClass</className>
<guid>b44b1d46-0e13-4dab-9bf1-5831d23a5e01</guid>
<property>
<defaultValue></defaultValue>
</property>
<property>
<description>The reference to the image to edit thumbnail for. Mandatory if the ##property## parameter is not used.</description>
</property>
<property>
<mandatory></mandatory>
</property>
<property>
<name>image</name>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroParameterClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<defaultValue>
<disabled>0</disabled>
<name>defaultValue</name>
<number>4</number>
<prettyName>Parameter default value</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultValue>
<description>
<disabled>0</disabled>
<name>description</name>
<number>2</number>
<prettyName>Parameter description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<mandatory>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>mandatory</name>
<number>3</number>
<prettyName>Parameter mandatory</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</mandatory>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Parameter name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>2</number>
<className>XWiki.WikiMacroParameterClass</className>
<guid>8b2ff821-ea0f-47ef-bf87-13e959870d76</guid>
<property>
<defaultValue>true</defaultValue>
</property>
<property>
<description></description>
</property>
<property>
<mandatory>0</mandatory>
</property>
<property>
<name>editInPopup</name>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroParameterClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<defaultValue>
<disabled>0</disabled>
<name>defaultValue</name>
<number>4</number>
<prettyName>Parameter default value</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultValue>
<description>
<disabled>0</disabled>
<name>description</name>
<number>2</number>
<prettyName>Parameter description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<mandatory>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>mandatory</name>
<number>3</number>
<prettyName>Parameter mandatory</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</mandatory>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Parameter name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>3</number>
<className>XWiki.WikiMacroParameterClass</className>
<guid>ea0af3ca-d8e1-4acd-9c7a-0505d6e9ec15</guid>
<property>
<defaultValue></defaultValue>
</property>
<property>
<description>The ratio of the thumbnail to enforce. Should be of "x:y" format, where x and y are numbers representing the ratio. For example, 1:1 to enforce a square thumbnail.</description>
</property>
<property>
<mandatory>0</mandatory>
</property>
<property>
<name>ratio</name>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroParameterClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<defaultValue>
<disabled>0</disabled>
<name>defaultValue</name>
<number>4</number>
<prettyName>Parameter default value</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultValue>
<description>
<disabled>0</disabled>
<name>description</name>
<number>2</number>
<prettyName>Parameter description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<mandatory>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>mandatory</name>
<number>3</number>
<prettyName>Parameter mandatory</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</mandatory>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Parameter name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>4</number>
<className>XWiki.WikiMacroParameterClass</className>
<guid>1a4d1312-66c8-48c1-b983-c27be1805722</guid>
<property>
<defaultValue></defaultValue>
</property>
<property>
<description>The minimum width the thumbnail should have</description>
</property>
<property>
<mandatory>0</mandatory>
</property>
<property>
<name>minimumWidth</name>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroParameterClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<defaultValue>
<disabled>0</disabled>
<name>defaultValue</name>
<number>4</number>
<prettyName>Parameter default value</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultValue>
<description>
<disabled>0</disabled>
<name>description</name>
<number>2</number>
<prettyName>Parameter description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<mandatory>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>mandatory</name>
<number>3</number>
<prettyName>Parameter mandatory</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</mandatory>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Parameter name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>5</number>
<className>XWiki.WikiMacroParameterClass</className>
<guid>1f367c8a-a6ad-4017-831b-5859e717e3da</guid>
<property>
<defaultValue></defaultValue>
</property>
<property>
<description>The minimum height the thumbnail should have</description>
</property>
<property>
<mandatory>0</mandatory>
</property>
<property>
<name>minimumHeight</name>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroParameterClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<defaultValue>
<disabled>0</disabled>
<name>defaultValue</name>
<number>4</number>
<prettyName>Parameter default value</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultValue>
<description>
<disabled>0</disabled>
<name>description</name>
<number>2</number>
<prettyName>Parameter description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<mandatory>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>mandatory</name>
<number>3</number>
<prettyName>Parameter mandatory</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</mandatory>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Parameter name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
</class>
<name>XWiki.ThumbnailEditor</name>
<number>6</number>
<className>XWiki.WikiMacroParameterClass</className>
<guid>fcf32731-52b8-46db-9edc-10df7fb10307</guid>
<property>
<defaultValue></defaultValue>
</property>
<property>
<description>The sizes to display as preview of old thumbnail and new thumbnail in the thumbnail editor. Semi-column separated values, in the x:y form. For example, for a user profile thumbnail, typical value will be &lt;tt&gt;30:30;50:50;120:120&lt;/tt&gt;.</description>
</property>
<property>
<mandatory>0</mandatory>
</property>
<property>
<name>previewSizes</name>
</property>
</object>
<content>{{velocity output=false}}
#if("$!request.image" != '')

Load CSS / JS dependencies

$xwiki.jsfx.use('js/scriptaculous/dragdrop.js')
$xwiki.jsx.use('XWiki.ThumbnailEditor')
$xwiki.ssx.use('XWiki.ThumbnailEditor')

Lookup requested image

#set($imageReference = $services.model.resolveAttachment($request.image))
#set($imageDocument = $xwiki.getDocument($imageReference.parent))
#set($image = $imageDocument.getAttachment($imageReference.name))

Lookup or create XWiki.ThumbnailClass object for this image

#if(!$imageDocument.getObject('XWiki.ThumbnailClass','image', $image.filename))
  #if($imageDocument.getObject('XWiki.ThumbnailClass','image', ''))
    #set($thumbnailObject = $imageDocument.getObject('XWiki.ThumbnailClass','image', ''))
  #else
    #set($objectNumber = $imageDocument.createNewObject('XWiki.ThumbnailClass'))
    #set($ok = $imageDocument.save("Created thumbnail object for image ${image.filename}", true))
    #set($thumbnailObject = $imageDocument.getObject('XWiki.ThumbnailClass', $objectNumber))
  #end
#else
  #set($thumbnailObject = $imageDocument.getObject('XWiki.ThumbnailClass','image', $image.filename))
#end

Lookup requested preview sizes.

#set($previewSizes = [])
#if("$!{request.previewSizes}" != '')
  #foreach($size in $request.previewSizes.split(';'))
    #if($size.indexOf(':') &gt; 0)
      $previewSizes.add({
        'x' : $size.split(':')[0],
        'y' : $size.split(':')[1]
      })
    #end
  #end
#end

#end
{{/velocity}}

{{velocity}}
{{html wiki=false clean=false}}
#if($image)
##
## Editor
##
&lt;div id="thumbnailEditor"&gt;
  ## Hide an image in full size in the dom so that we can compute its real dimensions (this is needed when those dimensions are
  ## larger than what we accept in this editor (900x600)).
  ## We cannot rely on the image plugin API #getWidth and #getHeight methods as they might return -1 in some case when the real size
  ## of the image is not known yet.
  &lt;div&gt;
    &lt;img src="$imageDocument.getAttachmentURL($image.filename)" class="hidden" id="fullSizeImage" /&gt;
    &lt;img src="$imageDocument.getAttachmentURL($image.filename)?width=500&amp;height=500&amp;keepAspectRatio=true" id="editedImage" /&gt;
  &lt;/div&gt;
  &lt;div class="buttons"&gt;
    &lt;span class="buttonwrapper"&gt;
      &lt;input type="submit" class="button" id="saveThumbnail" value="$msg.get('save')"&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;
##
## Previews
##
#if($previewSizes.size() &gt; 0)
&lt;div id="thumbnailPreviews"&gt;
&lt;div id="existingThumbnail"&gt;
  &lt;div class="previewTitle"&gt;
    $msg.get('xe.thumbnailEditor.currentThumbnail')
  &lt;/div&gt;
  &lt;div class="previewHolder"&gt;
    #foreach($size in $previewSizes)
      &lt;img src="$services.thumbnails.getThumbnailURL($imageReference, {'width': $size.x, 'height' :$size.y})" style="width:${size.x}px;height:${size.y}px;" /&gt;
    #end
  &lt;/div&gt;
&lt;/div&gt;
&lt;div id="newThumbnailPreview"&gt;
  &lt;div class="previewTitle"&gt;
    $msg.get('xe.thumbnailEditor.newThumbnailPreview')
  &lt;/div&gt;
  &lt;div class="previewHolder"&gt;
    #foreach($size in $previewSizes)
      &lt;img src="$services.thumbnails.getThumbnailURL($imageReference, {'width': $size.x, 'height' :$size.y})" style="width:${size.x}px;height:${size.y}px;" /&gt;
    #end
  &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
#end
&lt;div class="clearfloats"&gt;&lt;/div&gt;
## 
## Bootstrap editor
##
&lt;script type="text/javascript"&gt;
// &lt;[!CDATA[
(function(){
var bootstrapEditor = function() {
  if (XWiki.thumbnailEditor) {
    // Already bootstraped
    return;
  }
  var realSize = {
    x: $('fullSizeImage').width,
    y: $('fullSizeImage').height
  };
  var editorOptions = {
    #if("$!request.ratio" != '' &amp;&amp; $request.ratio.indexOf(':') &gt; 0)
      #set($x = $util.parseFloat($request.ratio.split(':')[0]))
      #set($y = $util.parseFloat($request.ratio.split(':')[1]))
      #if($x &amp;&amp; $x &gt; 0 &amp;&amp; $y &amp;&amp; $y&gt;0)
      "ratio" : {
        "x" : $x,
        "y" : $y
      },
      #end
    #end
    #if("$!request.minimumWidth" != '' &amp;&amp; $util.parseInt($request.minimumWidth) &gt; 0)
      "minimalWidth": $util.parseInt($request.minimumWidth),
    #end
    #if("$!request.minimumHeight" != '' &amp;&amp; $util.parseInt($request.minimumHeight) &gt; 0)
      "minimalHeight": $util.parseInt($request.minimumHeight),
    #end
    saveButton: $('saveThumbnail'),
    document : {
      "space" : "${escapetool.javascript($imageDocument.space)}",
      "page" : "${escapetool.javascript($imageDocument.name)}"
    },
    image: "$escapetool.javascript($image.filename)",
    objectNumber : $thumbnailObject.number,
    token: "${services.csrf.token}"
  }
  if (realSize.x != $('editedImage').width || realSize.y != $('editedImage').y) {
    editorOptions.realSize = realSize;
  }
  editorOptions.previewImages = $('newThumbnailPreview') ? $('newThumbnailPreview').select('div img') : [];

  #if($services.thumbnails.getThumbnailURL($imageReference).contains('boundaries='))
    editorOptions.initialPosition = {
      x: $thumbnailObject.get('x'),
      y: $thumbnailObject.get('y'),
      width: $thumbnailObject.get('width'),
      height: $thumbnailObject.get('height')
    };
  #end

  XWiki.thumbnailEditor = new XWiki.ThumbnailEditor($('editedImage'), editorOptions);
};

document.observe("xwiki:dom:loaded", bootstrapEditor);
document.observe("xwiki:thumbnailEditor:popupReady", bootstrapEditor);
})();
// ]]&gt;
&lt;/script&gt;
{{/html}}
#end
{{/velocity}}</content></xwikidoc>

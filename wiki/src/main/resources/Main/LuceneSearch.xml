<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Main</web>
<name>LuceneSearch</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.WebSearch</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1186588178000</creationDate>
<date>1233322267000</date>
<contentUpdateDate>1233322267000</contentUpdateDate>
<version>1.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<content>$xwiki.jsfx.use("uicomponents/search/search.js", true)##
$xwiki.ssfx.use("uicomponents/search/search.css", true)##
## Disable the document extra data: comments, attachments, history...
#set($docextras = [])
## ===================
## Lucene search
## ===================
## Inputs : $request.text
## Outputs : $list, $isScored
## ===================
## Uncomment this line to overload the maximum list of wiki where to search (also the one listed in the wikis combobox)
## #set($allwikinamelist = ["xwiki", "wiki1", "wiki2"])
##
## Uncomment this line to overload the wikis where to search
## #set($wikinames = "xwiki,wiki,wiki")
##
## Uncomment this line to overload the languages to search
## #set($languages = "default,en,de")
{pre}
#set ($displayUI = true)
#if ("$!request.xpage" == 'rdf')
  #set ($displayUI = false)
#end
## ---------------
## Space filtering
## ---------------
#set($spaces = $xwiki.spaces)
#set($selectedSpace = "$!request.space")
#if($selectedSpace != '')
  #set($reqspace = " AND web:${selectedSpace}")
#end
## ---------------
## Space macros
## ---------------
#macro(spaceoption $space $selectedSpace)
  &lt;option value="${space}" #if($selectedSpace == $space)selected="selected"#end&gt;$space&lt;/option&gt;
#end
#macro(spaceselect $selectedSpace $spaces)
  &lt;select name="space" title="$msg.get('xe.search.bar.spaces.title')"&gt;
    &lt;option value="" #if($selectedSpace == '')selected="selected"#end&gt;$msg.get('xe.search.bar.spaces.all')&lt;/option&gt;
    #foreach($space in $spaces)
      #spaceoption($space $selectedSpace)
    #end
  &lt;/select&gt;
#end
## ---------------
## Wikis filtering
## ---------------
#set($wikinamelist = [])
#if(!$wikinames)
  #set($wikinametable = $request.getParameterValues("wikinames"))
  #if(!$wikinametable || $request.wikinames == "")
    #set($wikinametable = $allwikinamelist)
  #end
  #set($wikinames = "")
  #foreach($wikiname in $wikinametable)
    #set($ok = $wikinamelist.add($wikiname))
    #if($wikinames != "")
      #set($wikinames = $wikinames + ",")
    #end
    #set($wikinames = $wikinames + $wikiname)
  #end
#else
  #set($wikinametable = $wikinames.split(", "))
  #foreach($wikiname in $wikinametable)
    #set($ok = $wikinamelist.add($wikiname))
  #end
#end
##
#if($xwiki.isVirtualMode())
  #if(!$allwikinamelist)
    #set($currentwikiname = $context.database)
    #set($ok = $context.setDatabase($context.mainWikiName))
    #set($allwikilist = $xwiki.searchDocuments(", BaseObject as obj, StringProperty as prop where doc.fullName=obj.name and obj.className='XWiki.XWikiServerClass' and prop.id.id=obj.id and prop.id.name='server'"))
    #set($ok = $context.setDatabase($currentwikiname))
    ##
    #set($allwikinamelist = [])
    #foreach($wiki in $allwikilist)
      #set($ok = $allwikinamelist.add($wiki.substring(17).toLowerCase()))
    #end
    #if(!$allwikinamelist.contains($context.mainWikiName))
      #set($ok = $allwikinamelist.add($context.mainWikiName))
    #end
  #end
  ## ---------------
  ## Wikis macros
  ## ---------------
  #macro(wikinamesoption $wikiname $wikinamelist)
    &lt;option value="$wikiname" #if($wikinamelist.contains($wikiname))selected="selected"#end&gt;$wikiname&lt;/option&gt;
  #end
  #macro(wikinamesselect $allwikinamelist $wikinamelist)
    &lt;select name="wikinames"&gt;
      &lt;option value="" selected="selected"&gt;All&lt;/option&gt;
      #foreach($wikiname in $allwikinamelist)
        #wikinamesoption($wikiname $wikinamelist)
      #end
    &lt;/select&gt;
  #end
#else
  #if($wikinames == "")
    #set($wikinames = $context.mainWikiName)
  #end
#end
## ---------------
## Query preparation
## ---------------
#set($text = "$!request.getParameter('text')")
#set($query = $text)
#set($utext = $util.encodeURI($query))
#set($defaultItemsPerPage = 30)
#set($itemsPerPage = $util.parseInt("$!{request.perPage}"))
#if($itemsPerPage &lt;= 0)
  #set($itemsPerPage = $defaultItemsPerPage)
#end
## ---------------
## RSS link
## ---------------
#if($selectedSpace == '')
  #set($url = $xwiki.getURL($doc.fullName, 'view', "xpage=rdf&amp;amp;text=${utext}" ))
#else
  #set($url = $xwiki.getURL($doc.fullName, 'view', "xpage=rdf&amp;space=${selectedSpace}&amp;text=${utext}"))
#end
## ---------------
## Title
## ---------------
#if ($displayUI)
&lt;h1&gt;&lt;span&gt;
  &lt;a style="float: right;" href="$url"&gt;&lt;img src="$xwiki.getSkinFile('icons/silk/feed.gif')" alt="$msg.get('xe.rss.icon')" /&gt;&lt;/a&gt;
  $msg.get('xe.search.title')&lt;/span&gt;
&lt;/h1&gt;
## ---------------
## Query form
## ---------------
&lt;form action="" method="get" id="searchBar"&gt;
  &lt;div class="centered"&gt;
    &lt;input type="text" name="text" class="searchQuery #if($text == '') defaultText#end" #if($text == '') value="$msg.get('xe.search.bar.query.tip')" #else value="${text}" #end title="$msg.get('xe.search.bar.query.title')"/&gt;
    #spaceselect($selectedSpace $spaces)
    &lt;input type="submit" class="searchButton" value="$msg.get('xe.search.bar.submit')" title="$msg.get('xe.search.bar.submit.title')"/&gt;
    &lt;div class="searchHelp"&gt;$msg.get('xe.search.bar.queryTip')&lt;/div&gt;
  &lt;/div&gt;
&lt;/form&gt;
#end
{/pre}
## ---------------
## Results processing
## ---------------
#if($query != '')
  #set($lucene = $xwiki.getPlugin("lucene"))
  #if($lucene)
    ## ---------------
    ## Lucene search
    ## ---------------
    #set($searchresults = $lucene.getSearchResults("${query}$!{reqspace}", $wikinames, $!languages, $xwiki))
    #if($searchresults.getHitcount() &gt; 0)
      ## -----------------
      ## Pagination (top)
      ## -----------------
      #if($displayUI)
        #set($paginationParameters = {'url' : $doc.getURL('view', "text=${query}&amp;amp;space=${selectedSpace}"), 'totalItems' : $searchresults.getHitcount(), 'defaultItemsPerPage' : $defaultItemsPerPage, 'position': 'top'})
        #pagination($paginationParameters)
      #end
      ## -----------------
      ## Display results
      ## -----------------
      #set($firstIndex = "$!{paginationParameters.firstItem}")
      #if($firstIndex == '')
        #set($firstIndex = "$!request.getParameter('firstIndex')")
        #if($firstIndex == '')
          #set($firstIndex = '0')
        #end
      #end
      #set($firstIndex = $util.parseInt($firstIndex))
      #set($firstIndex = $firstIndex + 1)
      #set($results = $searchresults.getResults("$firstIndex", "$itemsPerPage"))
      #if ("$!request.xpage" == 'rdf')
        #set ($baseurl = "http://${request.serverName}")
        #set ($descText = $msg.get("xe.search.rss.feedfor"))
        #set ($description = "$descText '$text'")
        #set ($list = $util.arrayList)
        #foreach ($item in $results)
          #if ($item.type != "attachment")
            #set ($ok = $list.add(0, "${item.web}.${item.name}"))
          #end
        #end
        #set ($ok = $response.setContentType("text/xml"))
        #includeInContext("XWiki.WebRssCode")
      #else
        #set ($list = $results)
        #set ($isScored = true)
        #includeInContext("XWiki.Results")
      #end
      ## -----------------
      ## Pagination (bottom)
      ## -----------------
      #if($displayUI)
        #set($paginationParameters.position = 'bottom')
        #pagination($paginationParameters)
      #end
    #end
  #else
    #error($msg.get('xe.search.plugin.notfound'))
  #end
#end
#if ($displayUI)
  {pre}
  ## ---------------
  ## Rebuild processing
  ## ---------------
  #set($lucene = $xwiki.getPlugin("lucene"))
  #if($lucene)
    #set($doRebuild = "$!{request.getParameter('rebuild')}")
    #if($doRebuild == "yes")
      #set($documentCount = $lucene.rebuildIndex())
      #if(${documentCount} &gt;= 0)
        {/pre}#info($msg.get("xe.search.rebuild.started")){pre}
      #elseif(${documentCount} == -1)
        #error($msg.get("xe.search.rebuild.rights"))
      #elseif(${documentCount} == -2)
        #error($msg.get("xe.search.rebuild.inprogress"))
      #else
        #error($msg.get("xe.search.rebuild.failed"))
      #end
    #else ## !doRebuild
      ## ---------------
      ## Queue &amp; rebuild option
      ## ---------------
      #set ($queuesize = $xwiki.lucene.getQueueSize())
      #if ($queuesize &gt; 2)
        #set($info1 = $msg.get('xe.search.rebuild.currently', [${queuesize}]))
      #else
        #set($info1 = $msg.get('xe.search.index.uptodate'))
      #end
      #if($hasAdmin)
        #set($info2 = " [$msg.get('xe.search.index.rebuild')&gt;${doc.space}.${doc.name}?rebuild=yes].")
      #else
        #set($info2 = "")
    #end
      {/pre}#info("${info1}${info2}"){pre}
    #end ## doRebuild
    {/pre}
   #set($defaultSearch = "[$msg.get('xe.search.default.engine')&gt;WebSearch?text=$utext]") 
   #warning($msg.get('xe.search.lucene.experimental', [$defaultSearch]))
  #else ## !lucene exists
  #set($defaultSearch = "[$msg.get('xe.search.default.engine')&gt;WebSearch?text=$utext]")
    #warning($msg.get('xe.search.plugin.notenabled', [$defaultSearch]))
  #end ## lucene exists
#end ## displayUI
</content></xwikidoc>
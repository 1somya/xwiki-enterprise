<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>XWiki</web>
<name>WebSearchCode</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.WebSearch</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1184488261000</creationDate>
<date>1244448126000</date>
<contentUpdateDate>1244448126000</contentUpdateDate>
<version>1.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<content>## ==================================================
## Common code for WebSearch and WebSearchRss
## ==================================================
## Inputs: $text, $space
## Output: $list
## Note: Do not put any empty line or this will break
## the generated RSS feed
## ==================================================
#set($datedlist = $util.arrayList)
#if("$!text" == '')
  ## No search
#else
  #set($text = $text.replaceAll("'", "''").replaceAll("%", "\\%"))
  #set($nbitems = 50)
  ## ----------------------------------------------------------------------
  ## Exclude Blacklisted spaces ($blacklistedSpaces is set in xwikivars.vm)
  ## Also exclude WebPreferences.
  ## ----------------------------------------------------------------------
  #set ($webClause = '')
  #foreach ($blacklistedSpace in $blacklistedSpaces)
    #set ($webClause = "${webClause} doc.space &lt;&gt; '$blacklistedSpace' and")
  #end
  #if(!$hasAdmin &amp;&amp; !$isAdvancedUser)
    #set ($webClause = "${webClause} doc.name&lt;&gt;'WebPreferences' and")
  #end
  ## -----------------------------------------------------------
  ## Display only a given space if $request.space is defined
  ## -----------------------------------------------------------
  #if("$!space" != '')
    #set ($webClause = "${webClause} doc.space='$space' and")
  #end
  #macro(addelement $item $list)
    #if($xwiki.hasAccessLevel('view', $context.user, "${context.database}:${item}"))
      #set($itemdoc = $xwiki.getDocument($item))
      ## All items will be sorted by the date; since the list is obtained from several queries, we can't order in the HQL.
      ## Prefix all item names with the date for sorting the combined results.
      #set($sdate = $xwiki.formatDate($itemdoc.date, 'yyyyMMddHHmmss'))
      #set($sitem = "${sdate}${item}")
      #if(!$list.contains($sitem))
        #set($discard = $list.add($sitem))
      #end
    #end
  #end
  ## -----------------------------------------------------------
  ## Search in the page names
  ## -----------------------------------------------------------
  #set ($sql = "where $webClause upper(doc.fullName) like upper('%$!text%') order by doc.date desc")
  #foreach ($item in $xwiki.searchDocuments($sql , $nbitems, 0))
    #addelement($item $datedlist)
  #end
  ## -----------------------------------------------------------
  ## Search in page content
  ## -----------------------------------------------------------
  #set ($sql = "where $webClause upper(doc.content) like upper('%$!text%') order by doc.date desc")
  #foreach ($item in $xwiki.searchDocuments($sql , $nbitems, 0))
    #addelement($item $datedlist)
  #end
  ## -----------------------------------------------------------
  ## Search in text fields (simple String properties)
  ## -----------------------------------------------------------
  #set($sql= ", BaseObject as obj, StringProperty as prop where $webClause obj.name=doc.fullName and prop.id.id = obj.id and upper(prop.value) like upper('%$!text%')")
  #foreach ($item in $xwiki.searchDocuments($sql , $nbitems, 0))
    #addelement($item $datedlist)
  #end
  ## -----------------------------------------------------------
  ## Search in big text fields (textarea properties)
  ## -----------------------------------------------------------
  #set($sql= ", BaseObject as obj, LargeStringProperty as prop where $webClause obj.name=doc.fullName and prop.id.id = obj.id and upper(prop.value) like upper('%$!text%')")
  #foreach ($item in $xwiki.searchDocuments($sql , $nbitems, 0))
    #addelement($item $datedlist)
  #end
#end
#set($list = $util.arrayList)
#foreach($item in $util.sort($datedlist))
  ## datedlist contains items prefixed with the date; strip the date from the actual item name:
  #set($ok = $list.add(0, $item.substring(14)))
#end</content>
</xwikidoc>
